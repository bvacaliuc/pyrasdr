%!PS-Adobe-3.0 EPSF-3.0
%%Title: tdd_phase.ps
%%Creator: XCircuit v3.9 rev25
%%CreationDate: Mon Nov 21 17:38:17 2016
%%Pages: 1
%%BoundingBox: 68 68 578 371
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.8
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%
%%BeginResource: procset XCIRCproc 3.8 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 384 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def /Tabs
	0 array def /fscale 1.0 def /kY 0 def gsave dup 1 add copy dup
	1 0 dtransform exch atan rotate {exch dup type /stringtype eq {gsave
        dup gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop
	exch pop exch pop grestore currentpoint pop add twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat exch pop
	pathbbox grestore 3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::amp_2stage {
begingate
1 1.000 -24 96 -24 -96 112 0 -24 96 4 polygon
1 2.000 -32 112 -32 -112 128 0 -32 112 4 polygon
1 1.000 128 64 36 64 2 polygon
1 1.000 128 -64 36 -64 2 polygon
1 1.000 -98 64 -128 64 2 polygon
1 1.000 -98 -64 -128 -64 2 polygon
1 2.000 -32 68 -98 114 -98 -114 -32 -68 4 polygon
1 1.000 -34 58 -88 96 -88 -96 -32 -56 4 polygon
endgate
} def

/::amp_small {
begingate
1 1.000 -56 96 -56 -96 80 0 -56 96 4 polygon
1 2.000 -64 112 -64 -112 96 0 -64 112 4 polygon
1 1.000 96 64 4 64 2 polygon
1 1.000 96 -64 4 -64 2 polygon
1 1.000 -64 64 -96 64 2 polygon
1 1.000 -64 -64 -96 -64 2 polygon
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.000 0 -16 pinlabel
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: tdd_phase 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 992 378 translate

1.000 0 240 416 ::amp_2stage
-1.000 0 240 -64 ::amp_small
(TX PAD) {/Helvetica cf} 2 149 0 2.000 240 576 label
(LNA) {/Helvetica cf} 2 149 0 2.000 240 96 label
0 2.000 -464 512 -464 320 -272 320 -272 512 4 polygon
0 1.000 -456 504 -456 328 -280 328 -280 504 4 polygon
1 1.000 -240 480 -272 480 2 polygon
1 1.000 -240 352 -272 352 2 polygon
(DAC) {/Helvetica cf} 2 149 0 2.000 -368 416 label
0 2.000 -800 512 -800 320 -560 320 -560 512 4 polygon
0 1.000 -792 504 -792 328 -568 328 -568 504 4 polygon
(TxTSP) {/Helvetica cf} 2 149 0 2.000 -676 416 label
1 1.000 -528 352 -560 352 2 polygon
1 1.000 -528 480 -560 480 2 polygon
1 1.000 -144 480 -108 480 2 polygon
1 1.000 -144 352 -108 352 2 polygon
1 2.000 -16 416 112 0.000 360.000 xcarc
1 1.000 -16 416 104 0.000 360.000 xcarc
1 2.000 -48 448 16 384 2 polygon
1 2.000 -48 384 16 448 2 polygon
1 1.000 80 352 116 352 2 polygon
1 1.000 80 480 116 480 2 polygon
1 1.000 -128 448 -144 448 2 polygon
1 1.000 -128 384 -144 384 2 polygon
1 1.000 -128 480 -256 480 2 polygon
1 1.000 -144 448 -272 448 2 polygon
1 1.000 -144 384 -272 384 2 polygon
1 1.000 -144 352 -240 352 2 polygon
1 1.000 -528 352 -464 352 2 polygon
1 1.000 -528 480 -464 480 2 polygon
1 1.000 -560 448 -464 448 2 polygon
1 1.000 -560 384 -464 384 2 polygon
(I) {/Helvetica cf} 2 149 0 2.000 -208 512 label
(Q) {/Helvetica cf} 2 149 0 2.000 -208 320 label
(I) {/Helvetica cf} 2 149 0 2.000 -512 512 label
(Q) {/Helvetica cf} 2 149 0 2.000 -512 320 label
0 2.000 -464 32 -464 -160 -272 -160 -272 32 4 polygon
0 1.000 -456 24 -456 -152 -280 -152 -280 24 4 polygon
1 1.000 -240 0 -272 0 2 polygon
1 1.000 -240 -128 -272 -128 2 polygon
(ADC) {/Helvetica cf} 2 149 0 2.000 -368 -64 label
0 2.000 -800 32 -800 -160 -560 -160 -560 32 4 polygon
0 1.000 -792 24 -792 -152 -568 -152 -568 24 4 polygon
(RxTSP) {/Helvetica cf} 2 149 0 2.000 -676 -64 label
1 1.000 -528 -128 -560 -128 2 polygon
1 1.000 -528 0 -560 0 2 polygon
1 1.000 -144 0 -108 0 2 polygon
1 1.000 -144 -128 -108 -128 2 polygon
1 2.000 -16 -64 112 0.000 360.000 xcarc
1 1.000 -16 -64 104 0.000 360.000 xcarc
1 2.000 -48 -32 16 -96 2 polygon
1 2.000 -48 -96 16 -32 2 polygon
1 1.000 -128 -32 -144 -32 2 polygon
1 1.000 -128 -96 -144 -96 2 polygon
1 1.000 -128 0 -256 0 2 polygon
1 1.000 -144 -32 -272 -32 2 polygon
1 1.000 -144 -96 -272 -96 2 polygon
1 1.000 -144 -128 -240 -128 2 polygon
1 1.000 -528 -128 -464 -128 2 polygon
1 1.000 -528 0 -464 0 2 polygon
1 1.000 -560 -32 -464 -32 2 polygon
1 1.000 -560 -96 -464 -96 2 polygon
(I) {/Helvetica cf} 2 149 0 2.000 -208 32 label
(Q) {/Helvetica cf} 2 149 0 2.000 -208 -160 label
(I) {/Helvetica cf} 2 149 0 2.000 -512 32 label
(Q) {/Helvetica cf} 2 149 0 2.000 -512 -160 label
1 1.000 144 0 80 0 2 polygon
1 1.000 144 -128 80 -128 2 polygon
1 1.000 -64 112 -116 112 2 polygon
1 1.000 -64 240 -116 240 2 polygon
-236 176 beginpath
-236 240 -188 240 -188 176 curveto
-188 112 -140 112 -140 176 curveto
1 1.000 endpath
1 1.000 -188 176 88 0.000 360.000 xcarc
1 2.000 -188 176 96 0.000 360.000 xcarc
1 1.000 -48 308 -48 44 2 polygon
1 1.000 16 308 16 44 2 polygon
1.000 90 -48 112 generic::jumper
1 1.000 -32 112 16 112 2 polygon
1.000 0 16 112 generic::dot
1 1.000 -68 240 -48 240 2 polygon
1.000 0 -48 240 generic::dot
(Tx PLL) {/Helvetica cf} 2 151 0 2.000 -292 180 label
1 1.000 336 0 368 0 2 polygon
1 1.000 336 -128 368 -128 2 polygon
1 1.000 368 352 416 352 416 0 368 0 4 polygon
1 1.000 368 -128 464 -128 464 480 368 480 4 polygon
256 1.000 384 304 384 32 496 32 496 304 4 polygon
($\\phi$) {/Helvetica cf} 2 149 0 2.000 432 176 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
