%!PS-Adobe-3.0 EPSF-3.0
%%Title: lms7_vna.ps
%%Creator: XCircuit v3.9 rev25
%%CreationDate: Mon Nov 21 16:10:26 2016
%%Pages: 1
%%BoundingBox: 68 68 808 718
%%DocumentNeededResources: font Helvetica Times-Roman Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.8
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%
%%BeginResource: procset XCIRCproc 3.8 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 384 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def /Tabs
	0 array def /fscale 1.0 def /kY 0 def gsave dup 1 add copy dup
	1 0 dtransform exch atan rotate {exch dup type /stringtype eq {gsave
        dup gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop
	exch pop exch pop grestore currentpoint pop add twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat exch pop
	pathbbox grestore 3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::iqmod_v2_block {
begingate
1 1.000 -256 336 -220 336 2 polygon
1 1.000 -256 208 -220 208 2 polygon
1 2.000 -128 272 112 0.000 360.000 xcarc
1 1.000 -128 272 104 0.000 360.000 xcarc
1 2.000 -160 304 -96 240 2 polygon
1 2.000 -160 240 -96 304 2 polygon
1 1.000 -256 -208 -220 -208 2 polygon
1 1.000 -256 -336 -220 -336 2 polygon
1 2.000 -128 -272 112 0.000 360.000 xcarc
1 1.000 -128 -272 104 0.000 360.000 xcarc
1 2.000 -160 -240 -96 -304 2 polygon
1 2.000 -160 -304 -96 -240 2 polygon
0 2.000 32 96 32 -96 224 -96 224 96 4 polygon
0 1.000 40 88 40 -88 216 -88 216 88 4 polygon
1 1.000 256 64 224 64 2 polygon
1 1.000 256 -64 224 -64 2 polygon
{ns} (S) {/Symbol cf} 3 21 0 2.000 128 0 label
1 1.000 -32 208 80 208 80 96 3 polygon
1 1.000 -48 352 176 352 176 96 3 polygon
1 1.000 -32 -208 64 -208 80 -208 80 -96 4 polygon
1 1.000 -32 -336 192 -336 192 -96 3 polygon
0 2.000 -224 96 -224 -96 -32 -96 -32 96 4 polygon
0 1.000 -216 88 -216 -88 -40 -88 -40 88 4 polygon
1 1.000 -176 96 -176 170 2 polygon
1 1.000 -80 96 -80 170 2 polygon
1 1.000 -80 -96 -80 -171 2 polygon
1 1.000 -176 -96 -176 -171 2 polygon
1 1.000 -216 -88 -40 88 2 polygon
(0) {/Times-Roman cf} 2 21 0 1.000 -160 32 label
{ns} (90) {/Times-Roman cf} 3 21 0 1.000 -96 -48 label
1 1.000 -256 64 -224 64 2 polygon
1 1.000 -256 -64 -224 -64 2 polygon
endgate
} def

/::iq_block {
begingate
1 1.000 -128 336 -92 336 2 polygon
1 1.000 -128 208 -92 208 2 polygon
1 2.000 0 272 112 0.000 360.000 xcarc
1 1.000 0 272 104 0.000 360.000 xcarc
1 2.000 -32 304 32 240 2 polygon
1 2.000 -32 240 32 304 2 polygon
1 1.000 -128 -208 -92 -208 2 polygon
1 1.000 -128 -336 -92 -336 2 polygon
1 2.000 0 -272 112 0.000 360.000 xcarc
1 1.000 0 -272 104 0.000 360.000 xcarc
1 2.000 -32 -240 32 -304 2 polygon
1 2.000 -32 -304 32 -240 2 polygon
0 2.000 -96 96 -96 -96 96 -96 96 96 4 polygon
0 1.000 -88 88 -88 -88 88 -88 88 88 4 polygon
1 1.000 -48 96 -48 170 2 polygon
1 1.000 48 96 48 170 2 polygon
1 1.000 48 -96 48 -171 2 polygon
1 1.000 -48 -96 -48 -171 2 polygon
1 1.000 -88 -88 88 88 2 polygon
(0) {/Times-Roman cf} 2 21 0 1.000 -32 32 label
{ns} (90) {/Times-Roman cf} 3 21 0 1.000 32 -48 label
1 1.000 -128 64 -96 64 2 polygon
1 1.000 -128 -64 -96 -64 2 polygon
1 1.000 96 208 132 208 2 polygon
1 1.000 96 336 132 336 2 polygon
1 1.000 96 -208 132 -208 2 polygon
1 1.000 96 -336 132 -336 2 polygon
endgate
} def

/::amp_2stage {
begingate
1 1.000 -24 96 -24 -96 112 0 -24 96 4 polygon
1 2.000 -32 112 -32 -112 128 0 -32 112 4 polygon
1 1.000 128 64 36 64 2 polygon
1 1.000 128 -64 36 -64 2 polygon
1 1.000 -98 64 -128 64 2 polygon
1 1.000 -98 -64 -128 -64 2 polygon
1 2.000 -32 68 -98 114 -98 -114 -32 -68 4 polygon
1 1.000 -34 58 -88 96 -88 -96 -32 -56 4 polygon
endgate
} def

/::amp_small {
begingate
1 1.000 -56 96 -56 -96 80 0 -56 96 4 polygon
1 2.000 -64 112 -64 -112 96 0 -64 112 4 polygon
1 1.000 96 64 4 64 2 polygon
1 1.000 96 -64 4 -64 2 polygon
1 1.000 -64 64 -96 64 2 polygon
1 1.000 -64 -64 -96 -64 2 polygon
endgate
} def

/::lpf_block {
begingate
0 2.000 -96 112 -96 -80 96 -80 96 112 4 polygon
0 1.000 -88 104 -88 -72 88 -72 88 104 4 polygon
1 1.000 -128 80 -96 80 2 polygon
1 1.000 -128 -48 -96 -48 2 polygon
1 1.000 128 80 96 80 2 polygon
1 1.000 128 -48 96 -48 2 polygon
1 1.000 0 -80 0 -112 2 polygon
1 1.000 -16 80 16 -16 48 32 -48 32 spline
1 1.000 -16 48 16 -48 48 0 -48 0 spline
1 1.000 -9 25 11 39 2 polygon
endgate
} def

/::vga_v2_block {
begingate
1 1.000 -32 80 -32 -80 84 0 -32 80 4 polygon
1 2.000 -40 96 -40 -96 96 0 -40 96 4 polygon
1 1.000 -40 64 -96 64 2 polygon
1 1.000 -96 -64 -40 -64 2 polygon
1 1.000 96 64 4 64 2 polygon
1 1.000 96 -64 8 -64 2 polygon
1 2.000 -56 -88 60 56 2 polygon
1 2.000 60 56 44 48 2 polygon
1 2.000 60 56 56 40 2 polygon
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: lms7_vna 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 1584 1104 translate

1.000 0 -144 416 ::iqmod_v2_block
1.000 0 -272 -512 ::iq_block
1.000 0 240 416 ::amp_2stage
-1.000 0 240 -512 ::amp_small
(TX PAD) {/Helvetica cf} 2 149 0 2.000 240 576 label
(LNA) {/Helvetica cf} 2 149 0 2.000 240 -352 label
1.000 0 -720 -256 ::lpf_block
1.000 0 -720 -800 ::lpf_block
1.000 0 -528 672 ::lpf_block
1.000 0 -528 128 ::lpf_block
-1.000 0 -496 -240 ::vga_v2_block
-1.000 0 -496 -784 ::vga_v2_block
0 2.000 -1072 784 -1072 592 -880 592 -880 784 4 polygon
0 1.000 -1064 776 -1064 600 -888 600 -888 776 4 polygon
1 1.000 -1200 752 -1072 752 2 polygon
1 1.000 -1200 624 -1072 624 2 polygon
1 1.000 -848 752 -880 752 2 polygon
1 1.000 -848 624 -880 624 2 polygon
(DAC) {/Helvetica cf} 2 149 0 2.000 -976 688 label
0 2.000 -1072 240 -1072 48 -880 48 -880 240 4 polygon
0 1.000 -1064 232 -1064 56 -888 56 -888 232 4 polygon
1 1.000 -1200 208 -1072 208 2 polygon
1 1.000 -1200 80 -1072 80 2 polygon
(DAC) {/Helvetica cf} 2 149 0 2.000 -976 144 label
1 1.000 -848 80 -880 80 2 polygon
1 1.000 -848 208 -880 208 2 polygon
0 2.000 -1072 -144 -1072 -336 -880 -336 -880 -144 4 polygon
0 1.000 -1064 -152 -1064 -328 -888 -328 -888 -152 4 polygon
1 1.000 -1200 -176 -1072 -176 2 polygon
1 1.000 -1200 -304 -1072 -304 2 polygon
(ADC) {/Helvetica cf} 2 149 0 2.000 -976 -240 label
1 1.000 -848 -304 -880 -304 2 polygon
1 1.000 -848 -176 -880 -176 2 polygon
0 2.000 -1072 -688 -1072 -880 -880 -880 -880 -688 4 polygon
0 1.000 -1064 -696 -1064 -872 -888 -872 -888 -696 4 polygon
1 1.000 -1200 -720 -1072 -720 2 polygon
1 1.000 -1200 -848 -1072 -848 2 polygon
(ADC) {/Helvetica cf} 2 149 0 2.000 -976 -784 label
1 1.000 -848 -848 -880 -848 2 polygon
1 1.000 -848 -720 -880 -720 2 polygon
1.000 0 -752 688 ::vga_v2_block
1.000 0 -752 144 ::vga_v2_block
1 1.000 -144 -304 -96 -304 -96 -848 -144 -848 4 polygon
1 1.000 -144 -720 -32 -720 -32 -176 -144 -176 4 polygon
1 1.000 144 -448 -32 -448 2 polygon
1 1.000 144 -576 -96 -576 2 polygon
1.000 0 -96 -576 generic::dot
1.000 0 -32 -448 generic::dot
0 1.000 -1384 776 -1384 56 -1208 56 -1208 776 4 polygon
0 2.000 -1392 784 -1392 48 -1200 48 -1200 784 4 polygon
0 1.000 -1384 -152 -1384 -872 -1208 -872 -1208 -152 4 polygon
0 2.000 -1392 -144 -1392 -880 -1200 -880 -1200 -144 4 polygon
(TxTSP) {/Helvetica cf} 2 149 270 3.000 -1296 416 label
(RxTSP) {/Helvetica cf} 2 149 270 3.000 -1296 -512 label
(TXI) {/Helvetica cf} 2 149 0 1.500 -1144 688 label
(TXQ) {/Helvetica cf} 2 149 0 1.500 -1136 144 label
(RXI) {/Helvetica cf} 2 149 0 1.500 -1144 -240 label
(RXQ) {/Helvetica cf} 2 149 0 1.500 -1136 -784 label
(LO from TX PLL) {/Helvetica cf} 2 151 0 2.000 -400 416 label
(LO from TX PLL) {/Helvetica cf} 2 151 0 2.000 -400 -512 label
1 1.000 368 352 416 352 416 -448 336 -448 4 polygon
1 1.000 368 480 480 480 480 -576 336 -576 4 polygon
256 2.000 352 288 352 -352 544 -352 544 288 4 polygon
($\\phi$) {/Helvetica cf} 2 145 0 2.000 448 -64 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
